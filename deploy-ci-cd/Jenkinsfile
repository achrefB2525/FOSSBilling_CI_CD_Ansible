pipeline {
    agent any

    environment {
        // Nom que tu as donnÃ© dans Jenkins > Configure System > SonarQube servers
        SONARQUBE_SERVER = 'SonarServer'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/FOSSBilling/FOSSBilling.git', branch: 'main'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'composer install --no-interaction'
            }
        }

        stage('Run Tests') {
            steps {
                // Si FOSSBilling a des tests PHPUnit
                sh './vendor/bin/phpunit || true'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE_SERVER}") {
                    sh '''
                        sonar-scanner \
                        -Dsonar.projectKey=FOSSBilling \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=$SONAR_HOST_URL \
                        -Dsonar.login=$SONAR_AUTH_TOKEN \
                        -Dsonar.language=php \
                        -Dsonar.php.coverage.reportPaths=coverage.xml
                    '''
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 1, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
}
