- name: Installer les dépendances système
  apt:
    name:
      - python3-pip
      - conntrack
      - socat
      - openjdk-17-jdk
    state: present

- name: Create kubeadm config file
  template:
    src: kubeadm-config.yaml.j2
    dest: /tmp/kubeadm-config.yaml
  when: inventory_hostname == 'master'

- name: Initialize Kubernetes master
  command: kubeadm init --config=/tmp/kubeadm-config.yaml
  become: yes
  register: kubeadm_init
  args:
    creates: /etc/kubernetes/admin.conf
  when: inventory_hostname == 'master'

- name: Create .kube directory for user
  file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  when: inventory_hostname == 'master'

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ansible_user }}/.kube/config
    remote_src: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
  when: inventory_hostname == 'master'

- name: Apply  CNI
  command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.30.0/manifests/calico.yaml

  environment:
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config
  become: yes
  become_user: "{{ ansible_user }}"
  when: inventory_hostname == 'master'



- name: Export kubeconfig to environment (optional)
  lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    line: 'export KUBECONFIG=/home/{{ ansible_user }}/.kube/config'
    state: present
  become: yes
  become_user: "{{ ansible_user }}"
  when: inventory_hostname == 'master'

- name: Generate kubeadm join command
  command: kubeadm token create --print-join-command
  register: join_output
  changed_when: false
  become: yes

- name: Set join command fact
  set_fact:
    join_cmd: "{{ join_output.stdout }}"

- name: Install Helm using snap
  command: snap install helm --classic
