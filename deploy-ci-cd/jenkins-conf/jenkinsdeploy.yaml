apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins-admin
rules:
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: jenkins-jiva
provisioner: jiva.csi.openebs.io
parameters:
  replicaCount: "2"
  storagePool: default
reclaimPolicy: Retain
volumeBindingMode: Immediate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: jenkins
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 6Gi
  volumeMode: Filesystem
  storageClassName: jenkins-jiva
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-init-groovy
  namespace: jenkins
data:
  reset-password.groovy: |
    import jenkins.model.*
    import hudson.security.*
    def instance = Jenkins.getInstance()

    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    hudsonRealm.createAccount("admin", "password")
    instance.setSecurityRealm(hudsonRealm)

    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    strategy.setAllowAnonymousRead(false)
    instance.setAuthorizationStrategy(strategy)

    instance.save()
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: jenkins
          image: jenkins/jenkins:latest
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          ports:
            - name: http-port
              containerPort: 8080
            - name: agent
              containerPort: 50000
          env:
            - name: JAVA_OPTS
              value: "-Djenkins.install.runSetupWizard=false"
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
            - name: jenkins-init-scripts
              mountPath: /var/jenkins_home/init.groovy.d
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-pvc
        - name: jenkins-init-scripts
          configMap:
            name: jenkins-init-groovy
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
spec:
  type: ClusterIP
  ports:
    - name: http-port
      port: 8080
      targetPort: 8080
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp
  namespace: jenkins
spec:
  type: ClusterIP
  ports:
    - name: agent
      port: 50000
      targetPort: 50000
  selector:
    app: jenkins
