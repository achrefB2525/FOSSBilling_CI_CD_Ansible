
    - name: Télécharger jenkins-cli.jar avec curl
      shell: curl -o {{ deploy_path }}/deploy-ci-cd/jenkins-conf/jenkins-cli.jar http://{{ host_ip }}:30080/jnlpJars/jenkins-cli.jar
      args:
        creates:{{ deploy_path }}/deploy-ci-cd/jenkins-conf/jenkins-cli.jar
      register: jenkins_cli

    

    - name: Mettre à jour les plugins Jenkins avec un script Groovy
      shell: |
        curl --user 'admin:password' --data-urlencode "script=$(< {{ deploy_path }}/deploy-ci-cd/jenkins-conf/update_plugins.groovy)" http://{{ host_ip }}:30080/scriptText
      register: update_plugins_result

    - name: Afficher le résultat de la mise à jour des plugins
      debug:
        var: update_plugins_result.stdout

    - name: Installer le plugin Git
      command: java -jar {{ deploy_path }}/deploy-ci-cd/jenkins-conf/jenkins-cli.jar -s http://{{ host_ip }}:30080/ -auth admin:password install-plugin git

    - name: Installer le plugin Maven Integration
      command: java -jar {{ deploy_path }}/deploy-ci-cd/jenkins-conf/jenkins-cli.jar -s http://{{ host_ip }}:30080/ -auth admin:password install-plugin maven-plugin

    - name: Installer le plugin Workflow Aggregator
      command: java -jar {{ deploy_path }}/deploy-ci-cd/jenkins-conf/jenkins-cli.jar -s http://{{ host_ip }}:30080/ -auth admin:password install-plugin workflow-aggregator

    - name: Installer le plugin SonarQube Scanner
      command: java -jar {{ deploy_path }}/deploy-ci-cd/jenkins-conf/jenkins-cli.jar -s http://{{ host_ip }}:30080/ -auth admin:password install-plugin sonar
    
    - name: Installer le plugin Ssh Server
      command: java -jar {{ deploy_path }}/deploy-ci-cd/jenkins-conf/jenkins-cli.jar -s http://{{ host_ip }}:30080/ -auth admin:password install-plugin   publish-over-ssh

    - name: Redémarrer Jenkins pour appliquer les modifications des plugins
      command: java -jar {{ deploy_path }}/deploy-ci-cd/jenkins-conf/jenkins-cli.jar -s http://{{ host_ip }}:30080/ -auth admin:password restart

