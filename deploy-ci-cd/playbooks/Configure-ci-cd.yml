---
- name: Playbook principal pour configurer les outils CI/CD
  hosts: localhost
  gather_facts: no 
  vars:
    services:
      - { namespace: default, name: prometheus-grafana, hostname: grafana.local }
      - { namespace: testing, name: sonar-svc, hostname: sonar.local }
      - { namespace: jenkins, name: jenkins, hostname: jenkins.local }

  vars_files:
    - vars/sonarvars.yaml

  tasks:
    - name: Récupérer l'IP ClusterIP du service SonarQube
      command: kubectl get svc sonar-svc -n testing -o jsonpath='{.spec.clusterIP}'
      register: sonar_ip

    - name: Définir la variable sonar_url
      set_fact:
        sonar_url: "{{ sonar_ip.stdout }}:9000"

    - name: Debug - Afficher l'URL de SonarQube
      debug:
        var: sonar_url

    - name: Inclure les tâches de configuration Sonar
      include_tasks: "{{ deploy_path }}/deploy-ci-cd/sonarqubedeploy/configSonar.yml"

#    - name: Inclure les tâches de configuration Nexus
#      include_tasks: "{{ deploy_path }}/deploy-ci-cd/nexus/ConfigureNexus.yml"

    - name: Récupérer l'IP ClusterIP du service Jenkins
      command: kubectl get svc jenkins -n jenkins -o jsonpath='{.spec.clusterIP}'
      register: jenkins_ip

    - name: Définir la variable jenkins_url
      set_fact:
        jenkins_url: "http://{{ jenkins_ip.stdout }}:8080"

    - name: Debug - Afficher l'URL de Jenkins
      debug:
        var: jenkins_url

    - name: Inclure les tâches de configuration Jenkins
      include_tasks: "{{ deploy_path }}/deploy-ci-cd/jenkins-conf/ConfigureJenkins.yml"  
      

    - name: Récupérer les IPs des services
      shell: "kubectl get svc -n {{ item.namespace }} {{ item.name }} -o jsonpath='{.spec.clusterIP}'"
      register: svc_ips
      loop: "{{ services }}"
      changed_when: false

    - name: Construire les lignes à ajouter dans /etc/hosts
      set_fact:
        host_entries: "{{ host_entries | default([]) + [ {'ip': item.stdout, 'host': item.item.hostname} ] }}"
      loop: "{{ svc_ips.results }}"

    - name: Ajouter chaque IP dans /etc/hosts si absente
      become: true
      lineinfile:
        path: /etc/hosts
        line: "{{ item.ip }} {{ item.host }}"
        state: present
      loop: "{{ host_entries }}"
