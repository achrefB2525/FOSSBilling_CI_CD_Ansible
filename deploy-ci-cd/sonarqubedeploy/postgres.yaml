apiVersion: v1
kind: Namespace
metadata:
  name: testing
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    app: postgres
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /mnt/data/postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: testing
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: manual
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: testing
  labels:
    app: postgres
data:
  POSTGRESQL_USERNAME: sonar_user
  POSTGRESQL_DATABASE: sonar_db
  POSTGRESQL_PASSWORD: S0N4RQUB3
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: testing
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      name: postgres
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: testing
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        runAsUser: 0  # Ex√©cuter en tant qu'utilisateur root
      containers:
        - name: postgres
          image: bitnami/postgresql
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - name: postgres-data
              mountPath: /bitnami/postgresql
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc

