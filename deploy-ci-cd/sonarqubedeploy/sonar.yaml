# ClusterIssuer pour cert-manager (auto-signé)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-issuer
spec:
  selfSigned: {}
---
# PVC pour SonarQube
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-pvc
  namespace: testing
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: storage-cicd
  resources:
    requests:
      storage: 4Gi
---
# ConfigMap pour SonarQube
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonar-config
  namespace: testing
  labels:
    app: sonar
data:
  SONARQUBE_JDBC_URL: "jdbc:postgresql://postgres-svc:5432/sonar_db"
  SONARQUBE_JDBC_USERNAME: "sonar_user"
  SONARQUBE_JDBC_PASSWORD: "S0N4RQUB3"
  JAVA_OPTS: "-Duser.timezone=Asia/Jakarta -Xmx2048m"
---
# Déploiement SonarQube
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonar-deployment
  namespace: testing
  labels:
    app: sonar
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonar
  template:
    metadata:
      labels:
        app: sonar
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      initContainers:
        - name: init
          image: busybox:1.34
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
      containers:
        - name: sonarqube
          image: sonarqube:8.9.7-community
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
          envFrom:
            - configMapRef:
                name: sonar-config
          securityContext:
            privileged: true
          volumeMounts:
            - name: app-pvc
              mountPath: "/opt/sonarqube/data/"
              subPath: data
            - name: app-pvc
              mountPath: "/opt/sonarqube/extensions/"
              subPath: extensions
          resources:
            requests:
              memory: "1024Mi"
            limits:
              memory: "2048Mi"
      volumes:
        - name: app-pvc
          persistentVolumeClaim:
            claimName: sonar-pvc
---
# Service SonarQube
apiVersion: v1
kind: Service
metadata:
  name: sonar-svc
  namespace: testing
  labels:
    app: sonar
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 9000
      name: sonar
  selector:
    app: sonar
---
# Certificat TLS pour SonarQube
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: sonar-cert
  namespace: testing
spec:
  secretName: sonar-tls
  issuerRef:
    name: selfsigned-issuer
    kind: ClusterIssuer
  commonName: sonar.local
  dnsNames:
    - sonar.local
  duration: 8760h     # 1 an
  renewBefore: 360h   # 15 jours
---
# Ingress SonarQube HTTPS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonar-ingress
  namespace: testing
  annotations:
    cert-manager.io/cluster-issuer: "selfsigned-issuer"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - sonar.local
      secretName: sonar-tls
  rules:
    - host: sonar.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sonar-svc
                port:
                  number: 9000
